{"ast":null,"code":"var _jsxFileName = \"/home/florinbejera/Documents/Projects/goit.projects/react/goit-react-hw-04-feedback/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Statistics } from './Statistics/Statistics';\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions';\nimport { Section } from './Section/Section';\nimport { Notification } from './Notification/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const objectApp = {\n    good,\n    neutral,\n    bad\n  };\n  const buttonKeys = Object.keys(objectApp);\n  const handleButtonClick = key => {\n    if (key === 'good') setGood(good + 1);else if (key === 'bad') setBad(bad + 1);else setNeutral(neutral + 1);\n  };\n  const countTotalFeedback = () => {\n    return good + bad + neutral;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round(good / (good + bad + neutral) * 100) || 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      justifyContent: 'center',\n      display: 'flex',\n      fontSize: 25,\n      color: '#010101'\n    },\n    children: /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Please leave feedback\",\n      children: [/*#__PURE__*/_jsxDEV(FeedbackOptions, {\n        onLeaveFeedback: buttonKeys,\n        options: handleButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), countTotalFeedback() ? /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        bad: bad,\n        neutral: neutral,\n        total: countTotalFeedback,\n        positivePercentage: countPositiveFeedbackPercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n        message: \"There is no feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n// import { Component } from 'react';\n\n// export class App extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n//   buttonKeys = Object.keys(this.state);\n\n//   handleButtonClick = key => {\n//     this.setState(prev => ({ [key]: prev[key] + 1 }));\n//   };\n\n//   countTotalFeedback = () => {\n//     return this.state.bad + this.state.good + this.state.neutral;\n//   };\n//   countPositiveFeedbackPercentage = () => {\n//     return (\n//       Math.round(\n//         (this.state.good /\n//           (this.state.good + this.state.bad + this.state.neutral)) *\n//           100\n//       ) || 0\n//     );\n//   };\n//   render() {\n//     return (\n//       <div\n//         style={{\n//           height: '100vh',\n//           justifyContent: 'center',\n\n//           display: 'flex',\n//           fontSize: 25,\n//           color: '#010101',\n//         }}\n//       >\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions\n//             onLeaveFeedback={this.buttonKeys}\n//             options={this.handleButtonClick}\n//           />\n//           {this.countTotalFeedback() ? (\n//             <Statistics\n//               good={this.state.good}\n//               bad={this.state.bad}\n//               neutral={this.state.neutral}\n//               total={this.countTotalFeedback}\n//               positivePercentage={this.countPositiveFeedbackPercentage}\n//             />\n//           ) : (\n//             <Notification message=\"There is no feedback\" />\n//           )}\n//         </Section>\n//       </div>\n//     );\n//   }\n// }\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Statistics","FeedbackOptions","Section","Notification","jsxDEV","_jsxDEV","App","_s","good","setGood","neutral","setNeutral","bad","setBad","objectApp","buttonKeys","Object","keys","handleButtonClick","key","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","style","height","justifyContent","display","fontSize","color","children","title","onLeaveFeedback","options","fileName","_jsxFileName","lineNumber","columnNumber","total","positivePercentage","message","_c","$RefreshReg$"],"sources":["/home/florinbejera/Documents/Projects/goit.projects/react/goit-react-hw-04-feedback/src/components/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Statistics } from './Statistics/Statistics';\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions';\nimport { Section } from './Section/Section';\nimport { Notification } from './Notification/Notification';\n\nexport const App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const objectApp = {\n    good,\n    neutral,\n    bad,\n  };\n  const buttonKeys = Object.keys(objectApp);\n  const handleButtonClick = key => {\n    if (key === 'good') setGood(good + 1);\n    else if (key === 'bad') setBad(bad + 1);\n    else setNeutral(neutral + 1);\n  };\n\n  const countTotalFeedback = () => {\n    return good + bad + neutral;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / (good + bad + neutral)) * 100) || 0;\n  };\n\n  return (\n    <div\n      style={{\n        height: '100vh',\n        justifyContent: 'center',\n\n        display: 'flex',\n        fontSize: 25,\n        color: '#010101',\n      }}\n    >\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          onLeaveFeedback={buttonKeys}\n          options={handleButtonClick}\n        />\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            bad={bad}\n            neutral={neutral}\n            total={countTotalFeedback}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        ) : (\n          <Notification message=\"There is no feedback\" />\n        )}\n      </Section>\n    </div>\n  );\n};\n\n// import { Component } from 'react';\n\n// export class App extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n//   buttonKeys = Object.keys(this.state);\n\n//   handleButtonClick = key => {\n//     this.setState(prev => ({ [key]: prev[key] + 1 }));\n//   };\n\n//   countTotalFeedback = () => {\n//     return this.state.bad + this.state.good + this.state.neutral;\n//   };\n//   countPositiveFeedbackPercentage = () => {\n//     return (\n//       Math.round(\n//         (this.state.good /\n//           (this.state.good + this.state.bad + this.state.neutral)) *\n//           100\n//       ) || 0\n//     );\n//   };\n//   render() {\n//     return (\n//       <div\n//         style={{\n//           height: '100vh',\n//           justifyContent: 'center',\n\n//           display: 'flex',\n//           fontSize: 25,\n//           color: '#010101',\n//         }}\n//       >\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions\n//             onLeaveFeedback={this.buttonKeys}\n//             options={this.handleButtonClick}\n//           />\n//           {this.countTotalFeedback() ? (\n//             <Statistics\n//               good={this.state.good}\n//               bad={this.state.bad}\n//               neutral={this.state.neutral}\n//               total={this.countTotalFeedback}\n//               positivePercentage={this.countPositiveFeedbackPercentage}\n//             />\n//           ) : (\n//             <Notification message=\"There is no feedback\" />\n//           )}\n//         </Section>\n//       </div>\n//     );\n//   }\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}